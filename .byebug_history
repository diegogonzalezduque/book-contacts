continue
Contact.count
continue
Contact.count
continue
next
@contact.persisted?
@contact
Contact.count
next
Contact.count
@contact
next
@contact
continue
next
continue
version.nil?
continue
next
continue
next
continue
version.nil?
next
continue
next
version
params[:id]
continue
params[:id]
version
continue
pp versions[1]
pp versions[1].first_name
versions[1].first_name
versions[1]
continue
contact.persisted?
continue
contact.save!
contact.first_name = 'rob'
contact.first_name
contact.versions.count
continue
@versions
continue
pp @contact.versions.second.to_hash
pp @contact.versions.second.to_h
pp @contact.versions.second
@contact.versions.second
@contact.versions.second.reify
@contact.versions.first.reify
@contact.versions.first
continue
 version.reify
continue
pp version
version
vesion
continue
version.reify
version
continue
reified_object
continue
reload!
@contact.versions.second.reify
continue
@contact.versions.second.reify
@contact.versions.first.reify
@contact.versions.first
